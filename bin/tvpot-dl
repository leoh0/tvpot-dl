#!/usr/bin/env perl
#
# tvpot-dl - Download flash videos from Daum tvpot
#
# tvpot-dl downloads flash videos from Daum tvpot.
#
# It can also be used to download movie trailers or music videos from
# Daum.
#
# Seungwon Jeong <seungwon0@gmail.com>
#
# Copyright (C) 2011 by Seungwon Jeong

use strict;

use warnings;

use 5.010;

use autodie;

use Getopt::Long;

use LWP::Simple qw< getstore is_error $ua >;

use Encode qw< encode_utf8 >;

use App::TvpotDl;

sub print_version {
    say "tvpot-dl $App::TvpotDl::VERSION";
    return;
}

sub print_help {
    print_version();

    print <<'END_HELP';

Usage:

  tvpot-dl [options] URL...

Options:

  -h, --help            print this help text and exit
  -v, --version         print program version and exit
  -q, --quiet           activates quiet mode
  -s, --simulate        do not download video
  -u, --url             simulate, quiet but print URL
  -t, --title           simulate, quiet but print title
  -f, --filename        simulate, quiet but print output file name
  --no-progress         do not print progress

Argument:

  URL                   URL of a tvpot video

Examples:

  tvpot-dl 'http://tvpot.daum.net/clip/ClipView.do?clipid=29772622'
  tvpot-dl 'http://music.daum.net/song/songVideo.do?songId=8443911&videoId=8446'
  tvpot-dl 'http://movie.daum.net/moviedetail/moviedetailVideoView.do?movieId=52843&videoId=29850'
  tvpot-dl 'http://tvpot.daum.net/best/Top.do?from=gnb#clipid=31946003'
  tvpot-dl 'http://tvpot.daum.net/story/StoryView.do?storyid=534'
  tvpot-dl 'http://media.daum.net/entertain/showcase/singer/?id=5#16'
  tvpot-dl --url 'http://tvpot.daum.net/brand/ProgramClipView.do?ownerid=Sa3QtEuMXf10&playlistid=1382723&clipid=25537851' | xargs wget --continue
  tvpot-dl < url_list

Please report bugs to <seungwon0@gmail.com>.
END_HELP
    return;
}

sub download_video {
    my ( $url, $arg_ref ) = @_;
    my $quiet_mode   = $arg_ref->{quiet_mode};
    my $simulate     = $arg_ref->{simulate};
    my $get_url      = $arg_ref->{get_url};
    my $get_title    = $arg_ref->{get_title};
    my $get_filename = $arg_ref->{get_filename};
    my $no_progress  = $arg_ref->{no_progress};

    # Step 1: Get video ID
    my $video_id = App::TvpotDl::get_video_id($url);
    return if !defined $video_id;
    if ( !$quiet_mode ) {
        say "Video ID: $video_id";
    }

    # Step 2: Get video URL
    my $video_url = App::TvpotDl::get_video_url($video_id);
    return if !defined $video_url;
    if ($get_url) {
        say $video_url;
        return 1;
    }
    if ( !$quiet_mode ) {
        say "Video URL: $video_url";
    }

    # Step 3: Get video title
    my $video_title = App::TvpotDl::get_video_title($video_id);
    return if !defined $video_title;
    $video_title = encode_utf8($video_title);
    if ($get_title) {
        say $video_title;
        return 1;
    }
    if ( !$quiet_mode ) {
        say "Video title: $video_title";
    }

    # Step 4: Get output file name
    my $filename = App::TvpotDl::get_filename_from_video_title($video_title);
    if ($get_filename) {
        say $filename;
        return 1;
    }
    if ( !$quiet_mode ) {
        say "Output filename: $filename";
    }

    return 1 if $simulate;

    # Step 5: Download the video
    if ( !$quiet_mode ) {
        say "Downloading the video as '$filename'... "
            . '(It may takes several minutes.)';
    }
    if ( !$quiet_mode && !$no_progress ) {
        $ua->show_progress(1);
    }
    my $rc = getstore( $video_url, $filename );
    $ua->show_progress(0);
    if ( is_error($rc) ) {
        warn "Cannot download the video.\n";
        return;
    }
    if ( !$quiet_mode ) {
        say "Successfully downloaded '$filename'.";
    }

    return 1;
}

my $print_help;
my $print_version;

my $quiet_mode;
my $simulate;
my $get_url;
my $get_title;
my $get_filename;
my $no_progress;

GetOptions(
    'help'        => \$print_help,
    'version'     => \$print_version,
    'quiet'       => \$quiet_mode,
    'simulate'    => \$simulate,
    'url'         => \$get_url,
    'title'       => \$get_title,
    'filename'    => \$get_filename,
    'no-progress' => \$no_progress,
) or die "GetOptions() failed!\n";

$quiet_mode = $quiet_mode || $get_url || $get_title || $get_filename;

if ($print_help) {
    print_help();
    exit;
}

if ($print_version) {
    print_version();
    exit;
}

my @urls = @ARGV;

# tvpot-dl < url_list
if ( !-t STDIN ) {
    while ( defined( my $line = <STDIN> ) ) {
        chomp $line;

        $line =~ s/[ #] .*//xms;    # Remove comment
        $line =~ s/\s+//xmsg;       # Trim spaces

        if ( $line ne q{} ) {
            push @urls, $line;
        }
    }
}

if ( @urls < 1 ) {
    print_help();
    exit 2;
}

my $arg_ref = {
    quiet_mode   => $quiet_mode,
    simulate     => $simulate,
    get_url      => $get_url,
    get_title    => $get_title,
    get_filename => $get_filename,
    no_progress  => $no_progress,
};

for my $i ( 0 .. $#urls ) {
    my $url = $urls[$i];

    if ( !$quiet_mode && @urls > 1 ) {
        printf "[%d/%d] %s\n", $i + 1, scalar @urls, $url;
    }

    download_video( $url, $arg_ref );

    if ( !$quiet_mode && @urls > 1 ) {
        say q{};    # Blank line
    }
}

__END__

=head1 NAME

tvpot-dl - download flash videos from Daum tvpot

=head1 SYNOPSIS

tvpot-dl [options] URL ...

=head1 DESCRIPTION

tvpot-dl downloads flash videos from Daum tvpot.

It can also be used to download movie trailers or music videos from
Daum.

=head1 ARGUMENTS

=over

=item URL

URL of a tvpot video.

=back

=head1 OPTIONS

=over

=item -h, --help

Print help text and exit.

=item -v, --version

Print program version and exit.

=item -q, --quiet

Activates quiet mode, avoiding many messages being written to the
terminal.

=item -s, --simulate

Simulate the operation, but do not download the video. Useful for
testing.

=item -u, --url

Simulate the operation, like quiet mode, but show the URL that would
be used to download the video. Can be used with other download tools
like wget.

=item -t, --title

Simulate the operation, like quiet mode, but show the title of the
video that would be downloaded.

=item -f, --filename

Simulate the operation, like quiet mode, but show the output file name
that would be used to download the video.

=item --no-progress

Do not print the progress during downloads.

=back

=head1 EXAMPLES

Download a tvpot video:

 tvpot-dl 'http://tvpot.daum.net/clip/ClipView.do?clipid=29772622'

Download a music video:

 tvpot-dl 'http://music.daum.net/song/songVideo.do?songId=8443911&videoId=8446'

Download a movie trailer:

 tvpot-dl 'http://movie.daum.net/moviedetail/moviedetailVideoView.do?movieId=52843&videoId=29850'

Download a video using wget:

 tvpot-dl --url 'http://tvpot.daum.net/brand/ProgramClipView.do?ownerid=Sa3QtEuMXf10&playlistid=1382723&clipid=25537851' | xargs wget --continue

Download videos from url_list file:

 tvpot-dl < url_list

=head1 URL

L<https://github.com/seungwon0/tvpot-dl>

=head1 AUTHOR

Seungwon Jeong E<lt>seungwon0@gmail.comE<gt>

=head1 LICENSE AND COPYRIGHT

Copyright 2011 Seungwon Jeong.

This program is free software; you can redistribute it and/or modify it
under the terms of either: the GNU General Public License as published
by the Free Software Foundation; or the Artistic License.

See http://dev.perl.org/licenses/ for more information.

=head1 SEE ALSO

youtube-dl(1), get_flash_videos(1)

=cut
